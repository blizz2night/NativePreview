apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.1"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            //在大多数情况下，您只需要在 ndk {} 块中指定 abiFilters（如上所示），因为它会指示 Gradle 构建和封装原生库的这些版本
            //Gradle 会构建camke.abiFilter这些 ABI 配置，不过仅会封装您在ndk{} 块中指定的配置。
            cmake {
                cppFlags ""
                abiFilters 'arm64-v8a', 'armeabi-v7a'
            }
            ndk {
                abiFilters 'arm64-v8a', 'armeabi-v7a'
            }
        }
        signingConfig signingConfigs.debug
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
